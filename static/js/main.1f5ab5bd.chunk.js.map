{"version":3,"sources":["images/sunny.jpg","images/cloudy.jpg","images/rainy.jpg","images/temp.jpg","features/location.js","features/weather.js","components/Location/location.jsx","components/Weather/weather.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","locationSlice","createSlice","name","initialState","value","reducers","changeLocation","state","action","payload","actions","weatherSlice","temp","humidity","wind","clouds","icon","setTemp","setHumidity","setWind","setClouds","setIcon","_weatherSlice$actions","Location","dispatch","useDispatch","React","createElement","Fragment","className","Space","Input","Search","placeholder","allowClear","onSearch","e","axios","get","concat","then","response","console","log","data","current","temp_c","wind_kph","cloud","condition","catch","err","warn","style","width","Weather","location","useSelector","weather","useEffect","Card","sx","Alert","severity","CardMedia","height","image","cloudy","sunny","title","CardContent","Typography","gutterBottom","variant","component","src","color","List","maxWidth","bgcolor","ListItem","ListItemAvatar","Avatar","DeviceThermostatIcon","ListItemText","primary","secondary","Divider","InvertColorsIcon","WindPowerIcon","App","reportWebVitals","onPerfEntry","Function","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","locationReducer","weatherReducer","ReactDOM","createRoot","document","getElementById","render","StrictMode","Provider"],"mappings":"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","file":"static/js/main.1f5ab5bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sunny.d948be30.jpg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.9a9ac061.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rainy.99bbaaa9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/temp.187eb974.jpg\";","import {createSlice} from '@reduxjs/toolkit'\r\n\r\nconst initialStateValue=\"city\";\r\n\r\nexport const locationSlice=createSlice({\r\n    name:\"location\",\r\n    initialState:{value : initialStateValue},\r\n    reducers:{\r\n        changeLocation: (state,action)=>{\r\n          state.value=action.payload\r\n        },\r\n        \r\n    }\r\n})\r\n\r\nexport const {changeLocation}= locationSlice.actions\r\n\r\nexport default locationSlice.reducer","import {createSlice} from '@reduxjs/toolkit'\r\n\r\nconst initialStateValue={temp : 0,humidity:0,wind:0,clouds:0,icon:\"\"};\r\n\r\nexport const weatherSlice=createSlice({\r\n    name:\"weather\",\r\n    initialState:{value:initialStateValue},\r\n    reducers:{\r\n        setTemp: (state,action)=>{\r\n          state.temp=action.payload\r\n        },\r\n        setHumidity: (state,action)=>{\r\n          state.humidity=action.payload\r\n        },\r\n        setWind: (state,action)=>{\r\n            state.wind=action.payload\r\n            },\r\n        setClouds: (state,action)=>{\r\n            state.clouds=action.payload\r\n            },\r\n        setIcon: (state,action)=>{\r\n            state.icon=action.payload\r\n            }\r\n        \r\n    }\r\n})\r\n\r\nexport const {setTemp,setHumidity,setWind,setClouds,setIcon}= weatherSlice.actions\r\n\r\nexport default weatherSlice.reducer","import React,{useState} from 'react'\r\nimport {useDispatch} from 'react-redux'\r\nimport {changeLocation} from '../../features/location'\r\nimport {setTemp,setHumidity,setWind,setClouds,setIcon} from '../../features/weather'\r\nimport {  Input ,Space} from 'antd';\r\nimport './location.css'\r\nimport axios from 'axios'\r\nimport { addListener } from '@reduxjs/toolkit';\r\n \r\n\r\nfunction Location() {\r\n\r\n    const dispatch=useDispatch();\r\n    const id=\"ed62a03506280641151952635881466a\"\r\n\r\n     \r\n\r\nfunction getLocation(e){\r\ndispatch(changeLocation(e))\r\naxios.get(`http://api.weatherapi.com/v1/current.json?key=f67a41e8f3044a54bac140811232502&q=${e}&aqi=no`)\r\n.then((response)=>{\r\n  console.log(response.data)\r\n   dispatch(setTemp(response.data.current.temp_c))\r\n   dispatch(setWind(response.data.current.wind_kph))\r\n   dispatch(setHumidity(response.data.current.humidity))\r\n   dispatch(setClouds(response.data.current.cloud))\r\n   dispatch(setIcon(response.data.current.condition.icon))\r\n\r\n}).catch(err=>{console.warn(\"No such city found\")  \r\n          dispatch(changeLocation(\"city\"))})\r\n}\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n    \r\n    <div className='location_container'>\r\n      <Space>\r\n        <Input.Search \r\n      placeholder=\"input search text\"\r\n      allowClear\r\n      onSearch={getLocation}\r\n      style={{\r\n        width: 250,\r\n      }}\r\n    />\r\n    </Space>\r\n    </div>\r\n\r\n    </>\r\n\r\n  )\r\n\r\n}\r\n\r\nexport default Location","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\nimport {Descriptions} from 'antd';\r\nimport './weather.css'\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from '@mui/material/CardMedia';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n import sunny from '../../images/sunny.jpg'\r\n import rainy from '../../images/rainy.jpg'\r\n import cloudy from '../../images/cloudy.jpg'\r\n import temp from '../../images/temp.jpg'\r\n\r\nimport List from '@mui/material/List';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport ListItemAvatar from '@mui/material/ListItemAvatar';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport ImageIcon from '@mui/icons-material/Image';\r\nimport WorkIcon from '@mui/icons-material/Work';\r\nimport BeachAccessIcon from '@mui/icons-material/BeachAccess';\r\nimport Divider from '@mui/material/Divider';\r\nimport { useEffect } from 'react';\r\nimport axios from 'axios'\r\nimport Alert from '@mui/material/Alert';\r\nimport DeviceThermostatIcon from '@mui/icons-material/DeviceThermostat';\r\nimport InvertColorsIcon from '@mui/icons-material/InvertColors';\r\nimport WindPowerIcon from '@mui/icons-material/WindPower';\r\n\r\nfunction Weather() {\r\n\r\n  const location=useSelector((state)=>state.location.value)\r\n  const weather=useSelector((state)=>state.weather)\r\n  \r\n  console.log(weather)\r\n\r\n  useEffect(() => {   \r\n    console.log(weather)   \r\n    console.log(\"in weather\") \r\n  },[weather])\r\n \r\n  \r\n  return (\r\n<div className='weather_container'>\r\n\r\n<Card className=\"weather_card\" sx={{ width: 445 }}>\r\n  {location==\"city\" ? <Alert severity=\"info\">No such city found</Alert> : null}\r\n\r\n      <CardMedia\r\n        sx={{ height: 240 }}\r\n        image={weather.clouds>50 ? cloudy : sunny}\r\n        title=\"green iguana\"\r\n      />\r\n      <CardContent >\r\n        <Typography className=\"city_name\" gutterBottom variant=\"h5\" component=\"div\">\r\n          {location}\r\n         \r\n        </Typography>\r\n         <img src={weather.icon}/>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n\r\n        <List className=\"weather_list\"\r\n      sx={{\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        bgcolor: 'background.paper',\r\n      }}\r\n    >\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n             <DeviceThermostatIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Temperture\" secondary={weather.temp+\"°C\"} />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <InvertColorsIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Humidity\" secondary={weather.humidity+\"%\"} />\r\n      </ListItem>\r\n      <Divider variant=\"inset\" component=\"li\" />\r\n      <ListItem>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n          <WindPowerIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary=\"Wind\" secondary={weather.wind+\"10km/h\"} />\r\n      </ListItem>\r\n    </List>\r\n          \r\n        </Typography>\r\n      </CardContent>\r\n    \r\n    </Card>\r\n    \r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Weather","import React from 'react';\nimport './App.css';\nimport Location from './components/Location/location'\nimport Weather from './components/Weather/weather';\n\n\nfunction App() {\n\n\n  return (\n    <div className=\"App\">\n      <Location/>\n      <Weather/>\n    </div>\n  );\n  \n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\nimport { configureStore } from \"@reduxjs/toolkit\";//to configure the store using toolkit\nimport { Provider } from \"react-redux\";//to make the store accessible to all components \n\n//importing reducers\nimport locationReducer from \"./features/location\"\nimport weatherReducer from './features/weather';\n \n\n//configuring the store\nconst store = configureStore({\n  reducer: {\n    location:locationReducer, \n    weather:weatherReducer\n  },\n});\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>\n);\n\n \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}